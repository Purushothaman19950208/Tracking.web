//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
using Microsoft.Extensions.Configuration;
namespace Tracking.web.sql_trackingdb_stag
{
    public static class ConnectionHelper
    {
        static Type[] persistentTypes = new Type[] {
            typeof(P__EFMigrationsHistory),
            typeof(ApplicationUsers),
            typeof(B2bUserGroupCompanyMappings),
            typeof(Companies),
            typeof(CompaniesCOneMastersV1Indexes),
            typeof(CompanyPermissions),
            typeof(COneDetails),
            typeof(COneDetailsV1),
            typeof(COneMasters),
            typeof(COneMastersV1),
            typeof(COnePicksV1),
            typeof(DefaultViews),
            typeof(ExcelExportInfos),
            typeof(Idsoko_PicksV1),
            typeof(InvitationHistories),
            typeof(InvitedUsers),
            typeof(IoTOperationDetails),
            typeof(IoTs),
            typeof(PitagoraMasterJoined),
            typeof(PitagoraMasters),
            typeof(Pitagoras),
            typeof(PitagorasV1),
            typeof(Receivers),
            typeof(RegisteredUsers),
            typeof(ReleaseNotes),
            typeof(SalesOffices),
            typeof(SecurityRoles),
            typeof(Shippers),
            typeof(Shippers2),
            typeof(SokoChangeFeeds),
            typeof(sysdiagrams),
            typeof(TelesaMoves),
            typeof(TelesaMovesV1),
            typeof(Transporters),
            typeof(UserAudit),
            typeof(UserManuals),
            typeof(UserViews),
            typeof(Vehicles),
            typeof(Warehouses)
        };
        public static Type[] GetPersistentTypes()
        {
            Type[] copy = new Type[persistentTypes.Length];
            Array.Copy(persistentTypes, copy, persistentTypes.Length);
            return copy;
        }
        public const string ConnectionStringName = "tcp:sql-otsukawh-stag-secondary.database.windows.net,1433sql-trackingdb-stag";
        public static void Connect(IConfiguration configuration, DevExpress.Xpo.DB.AutoCreateOption autoCreateOption, bool threadSafe = false)
        {
            if (threadSafe)
            {
                var provider = GetConnectionProvider(configuration, autoCreateOption);
                var dictionary = new DevExpress.Xpo.Metadata.ReflectionDictionary();
                dictionary.GetDataStoreSchema(persistentTypes);
                XpoDefault.DataLayer = new ThreadSafeDataLayer(dictionary, provider);
            }
            else
            {
                XpoDefault.DataLayer = XpoDefault.GetDataLayer(configuration.GetConnectionString(ConnectionStringName), autoCreateOption);
            }
            XpoDefault.Session = null;
        }
        public static DevExpress.Xpo.DB.IDataStore GetConnectionProvider(IConfiguration configuration, DevExpress.Xpo.DB.AutoCreateOption autoCreateOption)
        {
            return XpoDefault.GetConnectionProvider(configuration.GetConnectionString(ConnectionStringName), autoCreateOption);
        }
        public static DevExpress.Xpo.DB.IDataStore GetConnectionProvider(IConfiguration configuration, DevExpress.Xpo.DB.AutoCreateOption autoCreateOption, out IDisposable[] objectsToDisposeOnDisconnect)
        {
            return XpoDefault.GetConnectionProvider(configuration.GetConnectionString(ConnectionStringName), autoCreateOption, out objectsToDisposeOnDisconnect);
        }
        public static IDataLayer GetDataLayer(IConfiguration configuration, DevExpress.Xpo.DB.AutoCreateOption autoCreateOption)
        {
            return XpoDefault.GetDataLayer(configuration.GetConnectionString(ConnectionStringName), autoCreateOption);
        }
    }

}
